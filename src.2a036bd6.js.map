{"version":3,"sources":["src/mediaplayer.ts","src/plugins/autoPlay.ts","src/plugins/autoPause.ts","src/utils/growItem.ts","src/utils/iconsManager.ts","src/index.ts"],"names":[],"mappings":"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","file":"src.2a036bd6.js","sourceRoot":"..","sourcesContent":["interface ConfigParam{\n\n   el: any;\n  //it's not necessary to have plugins \n   plugins?:Array<any>; \n}\n\n\nclass MediaPlayer {\n\n  media:HTMLMediaElement\n  plugins:Array<any>\n\n  constructor(config: ConfigParam) {\n\n\n    //\"this.\" will contain the value in the instance of MediaPLayer,\n    //the value of video\n\n\n    //config.el == video...so\n    //this.media == video\n    this.media = config.el;\n    this.plugins = config.plugins\n\n    //_initPlugins will make the plugins start running by calling it's function\n    this.initPlugins();\n  }\n\n  private initPlugins() {\n\n\n    //forEach will iterated in every plugin we added\n    this.plugins.forEach(plugin => {\n      //and \"plugin.start\" will run the plugin selected by the interation\n      //\"this\" will represent the MediaPlayer\n      plugin.start(this);\n      //in the first iteration the value of \"plugin.start(this)\" will be...\n      //autoplay.start(this)\n    });\n\n  }\n\n  muteControl() {\n    // if is called for the first time, this.media.muted will have a false value, so it's going to be converted to a true value  \n\n    this.media.muted = !this.media.muted;\n\n    // for tha second time is called, it will bring a true value, so it's going to be converted to a false value, so you can hear now the video\n  }\n\n  play() {\n    this.media.play();\n  }\n  pause() {\n\n    this.media.pause();\n  }\n\n  control() {\n    if(this.media.muted==false)this.media.paused ? this.play() : this.pause();\n\n\n  }\n}\n\n  \n  export default MediaPlayer","import MediaPlayer from \"../mediaplayer\"\n\nclass autoPlay{\n\n//this plugin needs to control the player so we need to give it access\n//\"player\" is the MediaPlayer from the mediaplayer.js file\n\nstart(player:MediaPlayer){\n    \n    if(!player.media.muted)player.media.muted=true\n\n//revusar esti\n  \n   player.play()\n    }\n}\nexport default autoPlay","import MediaPlayer from '../mediaplayer'\nimport {presentation__container__appear,playOrPause} from '../index'\nclass autoPause{\n    \n    private threshold:number\n    private insideThreshold: boolean | undefined\n    private pauseByVisibility=false\n\n    title: any\n    player:MediaPlayer\n\n    constructor(title: HTMLTitleElement){\n\n        this.threshold = 0.15\n        this.handlerIntersection = this.handlerIntersection.bind(this)\n        this.handleVisibility = this.handleVisibility.bind(this)\n        this.title=title\n        this.insideThreshold\n        this.pauseByVisibility=false\n\n    }\n\n    start(player: MediaPlayer){\n        \n        //saving the control of the player in a class instance \n        this.player=player\n\n        const observer= new IntersectionObserver(this.handlerIntersection, { threshold:this.threshold } )\n        \n        //observer need an element to observe, that's why \"player.media\" is sent as parameter  \n        // .observe is a native method of IntersectionObserver\n        observer.observe(player.media)\n\n        document.addEventListener(\"visibilitychange\",this.handleVisibility)\n\n    }\n\n    private handleVisibility(){\n\n       const isVisible=document.visibilityState==\"visible\"\n\n\n       if(isVisible){\n\n        \n        this.title[0].innerHTML=\"AlejandroTV\"\n\n        \n      \n\n        if(this.insideThreshold && !this.pauseByVisibility ){\n\n            this.player.play()\n            //by assigning false it will respect the user interaction \n            this.pauseByVisibility=false\n            }\n        }\n       else{\n        this.title[0].innerHTML=\"Hey!\"\n       \n        this.pauseByVisibility=true\n        this.player.pause() \n\n        if(this.player.media.classList.contains('render')){\n            presentation__container__appear()\n            playOrPause.remove('Pause')\n            playOrPause.add('Play')\n    \n        }\n        }\n\n        \n    }\n\n    \n    //entries ==all objects observed\n   private handlerIntersection(entries:IntersectionObserverEntry[]){\n     \n        const entry=entries[0]\n        \n        if(entry.intersectionRatio>=this.threshold){\n        this.insideThreshold=true    \n        this.player.play()\n        \n        }\n        else{\n            \n            this.insideThreshold=false\n            this.player.pause()\n          \n\n    }\n    }\n}\n\n\nexport default autoPause","import { main_image,video,item,button,presentation__container__appear, removeMainImage} from \"../index\"\n\nconst presentationTextIntro:HTMLElement=document.querySelector(\".presentation__intro--text\")\n\n\n\n  \n  \n\n function grow_item(e){\n  \n  const gradient='linear-gradient(0deg, rgba(10,10,10,1) 0%, rgba(255,255,255,0) 100%)'\n\n  if(video.classList.contains('render'))return\n  if(main_image.style.backgroundImage)return\n  \n\n  if(e.target.classList.contains(\"presentation\") ||e.target.classList.contains(\"main_image\")){\n    main_image.style.backgroundImage=`${gradient}, url(${window.getComputedStyle(document.querySelector(\".container__item\")).backgroundImage.slice(4, -1).replace(/\"/g, \"\")})`\n   \n  }else{\n\n  \n    item.classList.add('display')\n  \n    //this will render once\n  \n    let style= e.target.currentStyle || window.getComputedStyle(e.target,null),\n    bi = style.backgroundImage.slice(4, -1).replace(/\"/g, \"\");\n    main_image.style.backgroundImage=`${gradient}, url(${bi})`\n  \n  }   \n  \n    main_image.style.animation = 'none';\n    main_image.offsetHeight; /* trigger reflow */\n    main_image.style.animation = null; \n  \n\n\n\n    button.classList.add(\"displayButton\")\n\n\n    setTimeout(()=>{ video.classList.add('render');\n                      removeMainImage()} ,3000)\n  \n      presentationTextIntro.style.display='none'\n      presentation__container__appear(true)\n      \n  }\n  export default grow_item","import {video,player,playOrPause,presentationContainer,presentation__container__appear,removeMainImage} from '../index'\n\nconst presentationButtonIcon:HTMLElement=document.querySelector('.presentation__button--icon.State')\n\n\nfunction presentation__container__disappear(){\n\n \n//this just is going to render the animation in the right time\n  if(presentationContainer.classList.contains('disappear')!=true || presentationContainer.style.display != 'none'){\n  setTimeout(() =>{presentationContainer.style.display = 'none'},500,\n              /*this will excute instantly when -> */  presentationContainer.classList.add('disappear'))\n  }\n}\n  \nfunction iconsManager(){\n\n  //this will just run once \n    if(video.classList.contains('render') && player.media.muted===true){\n        \n        presentation__container__disappear()\n        removeMainImage()\n        \n        presentationButtonIcon.classList.remove('Mute')\n        presentationButtonIcon.classList.add('unMute')\n        playOrPause.remove('Play')\n        playOrPause.add('Pause')\n\n\n        return\n  }\n\n  if(player.media.muted===true){\n     presentationButtonIcon.classList.add('Mute') \n      return\n    }\n\n  if(playOrPause.contains('Play')){\n     \n      playOrPause.remove('Play')\n      playOrPause.add('Pause')\n   \n     \n\n      presentation__container__disappear()\n\n      \n    }else if(playOrPause.contains('Pause')){\n      playOrPause.remove('Pause')\n      playOrPause.add('Play')\n \n      presentation__container__appear()\n      \n    \n    }\n}\nexport default iconsManager","import MediaPlayer from './mediaplayer' \nimport autoPlay from './plugins/autoPlay'\nimport autoPause from './plugins/autoPause'\nimport grow_item from './utils/growItem'\nimport iconsManager from './utils/iconsManager'\n\nexport const buttonPlayOrPause:HTMLElement=document.querySelector('.presentation__button--icon')\nexport const item=document.querySelector(\".container__item\")\nexport const main_image:HTMLElement=document.querySelector(\".main_image\")\nexport const button:HTMLElement=document.querySelector('.presentation__button')\nexport const presentationContainer:HTMLElement=document.querySelector(\".presentation__container\")\nexport const playOrPause=buttonPlayOrPause.classList;\nexport const video=document.querySelector('video')\nexport let firstTimeVideoRender:Boolean=false;\nconst presentationButtonIcon:HTMLElement=document.querySelector('.presentation__button--icon.State')\n\n\n\n\n\n\nconst title:any=document.getElementsByTagName(\"title\");\n\n\n\nitem.addEventListener('mouseover',grow_item)\nitem.addEventListener('mouseout',reduce_item)\nitem.addEventListener('click', show_item)\n\nmain_image.addEventListener('click',grow_item)\n\n\nexport function removeMainImage():void {\n  setTimeout(()=>{main_image.style.visibility='hidden' } ,1000,   main_image.classList.add(\"remove\"))\n  \n  \n  }\n\nexport function presentation__container__appear(firstTime=false){\n   if(firstTime){presentationContainer.style.display = 'block'}\n\n  if(presentationContainer.classList.contains('disappear') || presentationContainer.style.display==='none' ){\n  setTimeout(() =>{presentationContainer.style.display = 'block'},0,  presentationContainer.classList.remove('disappear'))\n}\n}\n\n\nfunction show_item(){\n\n  video.classList.add('render')\n  if(main_image.classList.contains('remove')==false){\n    removeMainImage()\n    if(player.media.muted===true){ presentationButtonIcon.classList.add('Mute') \n    return\n                 }}\n}\n// make the element selected smaller\nfunction reduce_item(){\n  document.querySelector(\".container__item\").classList.remove('display')\n  \n}\n\n\n\n//when video ends\n\nvideo.addEventListener('ended',()=>{\n  \n    player.media.muted =true\n    \n    playOrPause.remove('Pause')\n\n    presentation__container__appear()\n\n    playOrPause.add('Play')\n\n  setTimeout(()=>{ \n                  video.classList.remove('disappear')\n                  video.classList.remove('render')\n                  \n              \n                \n                },1000,\n                  video.classList.add('disappear'),\n                  main_image.classList.remove('remove'),\n                  main_image.style.visibility='visible'\n\n                  )\n                \n    })\n\n  //el:video contains the original video\n\n export const player=new MediaPlayer({\n    \n    //all of these are elements of the MediaPlayer, also they are hosted in mediaplayer.js file\n\n    // objects destructuring \n    el:video,\n\n    //  Here we will pass all the plugins this project has, for example, here we are passing autoplay in pluging's array \n    plugins:[new autoPlay(), new autoPause(title)] \n\n  })\nbutton.onclick=()=>{\n\n\n  show_item();\n\n  iconsManager()\n  player.media.muted ? player.muteControl() : player.control();\n\n\n}\n\nvideo.onclick=()=>{\n\n\n  show_item();\n\n  iconsManager()\n  player.media.muted ? player.muteControl() : player.control();\n\n\n}\n\n// if the navigator uses \"Service Worker\" then it will use it\nif('serviceWorker' in navigator){\n\n  navigator.serviceWorker.register('../sw.js').catch(error=>console.log(error.message))\n\n}"]}